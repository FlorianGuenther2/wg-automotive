' Functional perspective Cluster Demo application
@startuml
skinparam linetype polyline
skinparam linetype ortho
[Telltale Requester] as TT_requester
together {
[Display]
[Backlight]
}
' [Power Source]
'[Watchdog]
package "SOC" {
[Request handling]

package "Rendering (HW/SW)" as pkg_Rendering {
[QM Plane Rendering]
'[Safety Plane Rendering]
[Plane Storage] #Aqua
}

package "Autonomous Merge Pipeline 60Hz (HW)" as pkg_DC {
    [Plane Blending]
    [HW Display Interface] as HW_Display_interface
    [Configuration Data]  #Aqua
}

}

package "Logical constraint" #green {
    [Synchronization] as Synchronization
}

'pkg_Rendering -[#blue,bold,dotted]- pkg_DC : Synchronization

note top of Synchronization :  Rendering and Merging \npipeline need to be synchronized

[Synchronization] .[dotted,#blue]. pkg_DC
[Synchronization] .[dotted,#blue]. pkg_Rendering
'"Autonomous Merge Pipeline 60Hz (HW)" -- "Rendering (HW/SW)"


' schauen ob wir Synchronisierung visualisiert bekommen
' package symbole ausblenden
' Schauen ob wir relative anordnung

'Power source
'[Power Source] -[#blue]- SOC
'[Power Source] -[#blue]- [Display]
'[Power Source] -[#blue]- [Watchdog]
'[Power Source] -[#blue]- [Backlight]

' Autonomous Plane blender
[Plane Blending] ..> [Plane Storage] : Polling
[Plane Blending] --> HW_Display_interface
HW_Display_interface --> [Display]
[Configuration Data] .. [Plane Blending] 

' Request handling
TT_requester --> [Request handling] : Telltale Request
[Request handling] --> [QM Plane Rendering]
'[Request handling] --> [Safety Plane Rendering]
'[Request handling] --> [Telltale checking]

'Rendering
[QM Plane Rendering] --> [Plane Storage]
'[Safety Plane Rendering] --> [Plane Storage]

'Safety checking
'[HDMI Interface] --> [HDMI Decoding]
'[HDMI Decoding] --> [Telltale checking]
'[Telltale checking] --> [Watchdog] : pet
'[Telltale checking] --> [Calibration Data]

'Watchdog
'[Watchdog] --> [Backlight] : kill line
[Display] -- [Backlight]
@enduml

